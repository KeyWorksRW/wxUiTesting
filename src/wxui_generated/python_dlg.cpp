///////////////////////////////////////////////////////////////////////////////
// Code generated by wxUiEditor - see https://github.com/KeyWorksRW/wxUiEditor/
//
// Do not edit any code above the "End of generated code" comment block.
// Any changes before that block will be lost if it is re-generated!
///////////////////////////////////////////////////////////////////////////////

// clang-format off

#include <wx/sizer.h>

#include "python_dlg.h"

#include <wx/mstream.h>  // memory stream classes

// Convert a data array into a wxImage
inline wxImage wxueImage(const unsigned char* data, size_t size_data)
{
    wxMemoryInputStream strm(data, size_data);
    wxImage image;
    image.LoadFile(strm);
    return image;
};

namespace wxue_img
{
    extern const unsigned char english_png[541];
    extern const unsigned char japanese_png[377];
}

bool PythonDlg::Create(wxWindow* parent, wxWindowID id, const wxString& title,
    const wxPoint& pos, const wxSize& size, long style, const wxString &name)
{
    if (!wxDialog::Create(parent, id, title, pos, size, style, name))
        return false;

    if (!wxImage::FindHandler(wxBITMAP_TYPE_PNG))
        wxImage::AddHandler(new wxPNGHandler);

    auto* bSizer1 = new wxBoxSizer(wxVERTICAL);
    {
        wxString radioBox_choices[] = {
            "Radio Button ",
            "fooish ",
            "bar none "
        };
        // Trailing spaces added to avoid clipping
        m_radioBox = new wxRadioBox(this, wxID_ANY, "My Radio Box", wxDefaultPosition, wxDefaultSize, 3,
            radioBox_choices, 0, wxRA_SPECIFY_COLS);
    }
    bSizer1->Add(m_radioBox, wxSizerFlags().Border(wxALL));

    auto* box_sizer_3 = new wxBoxSizer(wxHORIZONTAL);

    m_btn = new wxButton(this, wxID_ANY, "MyButton");
    box_sizer_3->Add(m_btn, wxSizerFlags().Border(wxALL));

    m_btn_2 = new wxCommandLinkButton(this, wxID_ANY, "MyButton", "my note");
        m_btn_2->SetBitmap(wxBitmapBundle::FromBitmap(wxueImage(wxue_img::english_png, sizeof(wxue_img::english_png))));
    box_sizer_3->Add(m_btn_2, wxSizerFlags().Border(wxALL));

    m_toggleBtn = new wxToggleButton(this, wxID_ANY, "MyButton");
        m_toggleBtn->SetBitmap(wxBitmapBundle::FromBitmap(wxueImage(wxue_img::japanese_png, sizeof(wxue_img::japanese_png))));
    box_sizer_3->Add(m_toggleBtn, wxSizerFlags().Border(wxALL));

    bSizer1->Add(box_sizer_3, wxSizerFlags().Border(wxALL));

    auto* box_sizer = new wxBoxSizer(wxVERTICAL);

    bSizer1->Add(box_sizer, wxSizerFlags().Expand().Border(wxALL));

    auto* stdBtn = CreateStdDialogButtonSizer(wxOK|wxCANCEL);
    bSizer1->Add(CreateSeparatedSizer(stdBtn), wxSizerFlags().Expand().Border(wxALL));

    SetSizerAndFit(bSizer1);
    Centre(wxBOTH);

    // Event handlers
    Bind(wxEVT_INIT_DIALOG, &PythonDlg::OnInit, this);

    return true;
}

// ************* End of generated code ***********
// DO NOT EDIT THIS COMMENT BLOCK!
//
// Code below this comment block will be preserved
// if the code for this class is re-generated.
//
// clang-format on
// ***********************************************

/////////////////// Non-generated Copyright/License Info ////////////////////
// Author:    Ralph Walden
// Copyright: Copyright (c) 2020-2022 KeyWorks Software (Ralph Walden)
// License:   Apache License -- see ../../LICENSE
/////////////////////////////////////////////////////////////////////////////

void PythonDlg::OnInit(wxInitDialogEvent& event)
{
    event.Skip();  // transfer all validator data to their windows and update UI
}

#include "mainframe.h"

void MainFrame::OnPythonDlg(wxCommandEvent& WXUNUSED(event))
{
    PythonDlg dlg(this);
    dlg.ShowModal();
}
