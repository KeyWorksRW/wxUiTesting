///////////////////////////////////////////////////////////////////////////////
// Code generated by wxUiEditor - see https://github.com/KeyWorksRW/wxUiEditor/
//
// Do not edit any code above the "End of generated code" comment block.
// Any changes before that block will be lost if it is re-generated!
///////////////////////////////////////////////////////////////////////////////

// clang-format off

#include <wx/colour.h>
#include <wx/panel.h>
#include <wx/settings.h>

#include "images.h"

#include "booktest_dlg.h"

#include <wx/mstream.h>  // memory stream classes
#include <wx/zstream.h>  // zlib stream classes

#include <memory>  // for std::make_unique

// Convert compressed SVG string into a wxBitmapBundle
#ifdef __cpp_inline_variables
inline wxBitmapBundle wxueBundleSVG(const unsigned char* data,
    size_t size_data, size_t size_svg, wxSize def_size)
#else
static wxBitmapBundle wxueBundleSVG(const unsigned char* data,
    size_t size_data, size_t size_svg, wxSize def_size)
#endif
{
    auto str = std::make_unique<char[]>(size_svg);
    wxMemoryInputStream stream_in(data, size_data);
    wxZlibInputStream zlib_strm(stream_in);
    zlib_strm.Read(str.get(), size_svg);
    return wxBitmapBundle::FromSVG(str.get(), def_size);
};

namespace wxue_img
{
    extern const unsigned char e697a5e381aee4b8b8_svg[209];  // ../art/日の丸.svg
    extern const unsigned char french_flag_svg[235];  // ../art/french_flag.svg
}

bool BookTestDlg::Create(wxWindow* parent, wxWindowID id, const wxString& title,
    const wxPoint& pos, const wxSize& size, long style, const wxString &name)
{
    if (!wxDialog::Create(parent, id, title, pos, size, style, name))
        return false;
    if (!wxImage::FindHandler(wxBITMAP_TYPE_PNG))
        wxImage::AddHandler(new wxPNGHandler);

    auto* dlg_sizer = new wxBoxSizer(wxVERTICAL);
    dlg_sizer->SetMinSize(800, 1000);

    m_notebook = new wxAuiNotebook(this, wxID_ANY);
    dlg_sizer->Add(m_notebook, wxSizerFlags(1).Expand().Border(wxALL));

    auto* page_2 = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook->AddPage(page_2, "ChoiceBook");

    auto* page_sizer_1 = new wxBoxSizer(wxVERTICAL);

    m_choicebook = new wxChoicebook(page_2, wxID_ANY);
    m_choicebook->SetMinSize(FromDIP(wxSize(400, 400)));
    page_sizer_1->Add(m_choicebook, wxSizerFlags().Border(wxALL));

    auto* btn = new wxButton(m_choicebook, wxID_ANY, "First");
    m_choicebook->GetControlSizer()->Add(btn, wxSizerFlags().Expand().Border(wxALL));

    auto* btn_2 = new wxButton(m_choicebook, wxID_ANY, "Last");
    m_choicebook->GetControlSizer()->Add(btn_2, wxSizerFlags().Expand().Border(wxALL));

    auto* page_20 = new wxPanel(m_choicebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_choicebook->AddPage(page_20, "English");
    page_20->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_13 = new wxBoxSizer(wxVERTICAL);

    m_staticText_16 = new wxStaticText(page_20, wxID_ANY, "This is a sentence in English.");
    parent_sizer_13->Add(m_staticText_16, wxSizerFlags().Border(wxALL));

    auto* box_sizer = new wxBoxSizer(wxVERTICAL);

    m_staticText_2 = new wxStaticText(page_20, wxID_ANY,
        "The First and Last buttons above are children of the wcChoicebook. They are added using choicebook->GetControlSizer() which allows them to share the layout space for the wxChoice control.");
    m_staticText_2->Wrap(380);
    box_sizer->Add(m_staticText_2, wxSizerFlags().Expand().Border(wxALL));

    parent_sizer_13->Add(box_sizer, wxSizerFlags().Border(wxALL));
    page_20->SetSizerAndFit(parent_sizer_13);

    auto* page_21 = new wxPanel(m_choicebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_choicebook->AddPage(page_21, wxString::FromUTF8("Français"));
    page_21->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer__2 = new wxBoxSizer(wxVERTICAL);

    m_staticText_17 = new wxStaticText(page_21, wxID_ANY, wxString::FromUTF8("Ceci est une phrase en français."));
    parent_sizer__2->Add(m_staticText_17, wxSizerFlags().Border(wxALL));

    auto* box_sizer_3 = new wxBoxSizer(wxVERTICAL);

    m_staticText__3 = new wxStaticText(page_21, wxID_ANY,
        "The First and Last buttons above are children of the wcChoicebook. They are added using choicebook->GetControlSizer() which allows them to share the layout space for the wxChoice control.");
    m_staticText__3->Wrap(390);
    box_sizer_3->Add(m_staticText__3, wxSizerFlags().Expand().Border(wxALL));

    parent_sizer__2->Add(box_sizer_3, wxSizerFlags().Border(wxALL));
    page_21->SetSizerAndFit(parent_sizer__2);

    auto* page_22 = new wxPanel(m_choicebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_choicebook->AddPage(page_22, wxString::FromUTF8("日本語"));
    page_22->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_14 = new wxBoxSizer(wxVERTICAL);

    m_staticText_18 = new wxStaticText(page_22, wxID_ANY, wxString::FromUTF8("これは日本語の文章です。"));
    parent_sizer_14->Add(m_staticText_18, wxSizerFlags().Border(wxALL));

    auto* box_sizer_2 = new wxBoxSizer(wxVERTICAL);

    m_staticText__2 = new wxStaticText(page_22, wxID_ANY,
        "The First and Last buttons above are children of the wcChoicebook. They are added using choicebook->GetControlSizer() which allows them to share the layout space for the wxChoice control.");
    m_staticText__2->Wrap(390);
    box_sizer_2->Add(m_staticText__2, wxSizerFlags().Expand().Border(wxALL));

    parent_sizer_14->Add(box_sizer_2, wxSizerFlags().Border(wxALL));
    page_22->SetSizerAndFit(parent_sizer_14);
    page_2->SetSizerAndFit(page_sizer_1);

    auto* page_3 = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook->AddPage(page_3, "ListBook");

    auto* page_sizer_2 = new wxBoxSizer(wxVERTICAL);

    m_listbook = new wxListbook(page_3, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLB_LEFT);
    {
        wxWithImages::Images bundle_list;
        bundle_list.push_back(wxue_img::bundle_english_png());
        bundle_list.push_back(wxue_img::bundle_french_png());
        bundle_list.push_back(wxue_img::bundle_japanese_png());
        m_listbook->SetImages(bundle_list);
    }
    m_listbook->SetMinSize(FromDIP(wxSize(400, 400)));
    page_sizer_2->Add(m_listbook, wxSizerFlags().Border(wxALL));

    auto* page_6 = new wxPanel(m_listbook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_listbook->AddPage(page_6, "English", false, 0);
    page_6->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer = new wxBoxSizer(wxVERTICAL);

    m_staticText_6 = new wxStaticText(page_6, wxID_ANY, "This is a sentence in English.");
    parent_sizer->Add(m_staticText_6, wxSizerFlags().Border(wxALL));
    page_6->SetSizerAndFit(parent_sizer);

    auto* page_7 = new wxPanel(m_listbook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_listbook->AddPage(page_7, wxString::FromUTF8("Français"), false, 1);
    page_7->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_2 = new wxBoxSizer(wxVERTICAL);

    m_staticText_3 = new wxStaticText(page_7, wxID_ANY, wxString::FromUTF8("Ceci est une phrase en français."));
    parent_sizer_2->Add(m_staticText_3, wxSizerFlags().Border(wxALL));
    page_7->SetSizerAndFit(parent_sizer_2);

    auto* page_8 = new wxPanel(m_listbook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_listbook->AddPage(page_8, wxString::FromUTF8("日本語"), false, 2);
    page_8->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_3 = new wxBoxSizer(wxVERTICAL);

    m_staticText_7 = new wxStaticText(page_8, wxID_ANY, wxString::FromUTF8("これは日本語の文章です。"));
    parent_sizer_3->Add(m_staticText_7, wxSizerFlags().Border(wxALL));
    page_8->SetSizerAndFit(parent_sizer_3);

    page_3->SetSizerAndFit(page_sizer_2);

    auto* page_4 = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook->AddPage(page_4, "NoteBook");

    auto* page_sizer_3 = new wxBoxSizer(wxVERTICAL);

    m_notebook_2 = new wxNotebook(page_4, wxID_ANY);
    {
        wxWithImages::Images bundle_list;
        bundle_list.push_back(wxue_img::bundle_english_png());
        bundle_list.push_back(wxue_img::bundle_french_png());
        bundle_list.push_back(wxue_img::bundle_japanese_png());
        m_notebook_2->SetImages(bundle_list);
    }
    m_notebook_2->SetMinSize(FromDIP(wxSize(400, 400)));
    page_sizer_3->Add(m_notebook_2, wxSizerFlags().Expand().Border(wxALL));

    auto* page_9 = new wxPanel(m_notebook_2, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook_2->AddPage(page_9, "English", false, 0);
    page_9->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_4 = new wxBoxSizer(wxVERTICAL);

    m_staticText_4 = new wxStaticText(page_9, wxID_ANY, "This is a sentence in English.");
    parent_sizer_4->Add(m_staticText_4, wxSizerFlags().Border(wxALL));
    page_9->SetSizerAndFit(parent_sizer_4);

    auto* page_10 = new wxPanel(m_notebook_2, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook_2->AddPage(page_10, wxString::FromUTF8("Français"), false, 1);
    page_10->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_5 = new wxBoxSizer(wxVERTICAL);

    m_staticText_8 = new wxStaticText(page_10, wxID_ANY, wxString::FromUTF8("Ceci est une phrase en français."));
    parent_sizer_5->Add(m_staticText_8, wxSizerFlags().Border(wxALL));
    page_10->SetSizerAndFit(parent_sizer_5);

    auto* page_11 = new wxPanel(m_notebook_2, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook_2->AddPage(page_11, wxString::FromUTF8("日本語"), false, 2);
    page_11->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_6 = new wxBoxSizer(wxVERTICAL);

    m_staticText_9 = new wxStaticText(page_11, wxID_ANY, wxString::FromUTF8("これは日本語の文章です。"));
    parent_sizer_6->Add(m_staticText_9, wxSizerFlags().Border(wxALL));
    page_11->SetSizerAndFit(parent_sizer_6);

    page_4->SetSizerAndFit(page_sizer_3);

    auto* page_5 = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook->AddPage(page_5, "ToolBook");

    auto* page_sizer_4 = new wxBoxSizer(wxVERTICAL);

    m_toolbook = new wxToolbook(page_5, wxID_ANY);
    {
        wxWithImages::Images bundle_list;
        bundle_list.push_back(wxue_img::bundle_english_png());
        bundle_list.push_back(wxue_img::bundle_french_png());
        bundle_list.push_back(wxue_img::bundle_japanese_png());
        m_toolbook->SetImages(bundle_list);
    }
    m_toolbook->SetMinSize(FromDIP(wxSize(400, 400)));
    page_sizer_4->Add(m_toolbook, wxSizerFlags().Border(wxALL));

    auto* page_12 = new wxPanel(m_toolbook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_toolbook->AddPage(page_12, "English", false, 0);
    page_12->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_7 = new wxBoxSizer(wxVERTICAL);

    m_staticText_5 = new wxStaticText(page_12, wxID_ANY, "This is a sentence in English.");
    parent_sizer_7->Add(m_staticText_5, wxSizerFlags().Border(wxALL));
    page_12->SetSizerAndFit(parent_sizer_7);

    auto* page_13 = new wxPanel(m_toolbook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_toolbook->AddPage(page_13, wxString::FromUTF8("Français"), false, 1);
    page_13->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_8 = new wxBoxSizer(wxVERTICAL);

    m_staticText_10 = new wxStaticText(page_13, wxID_ANY, wxString::FromUTF8("Ceci est une phrase en français."));
    parent_sizer_8->Add(m_staticText_10, wxSizerFlags().Border(wxALL));
    page_13->SetSizerAndFit(parent_sizer_8);

    auto* page_14 = new wxPanel(m_toolbook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_toolbook->AddPage(page_14, wxString::FromUTF8("日本語"), false, 2);
    page_14->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_9 = new wxBoxSizer(wxVERTICAL);

    m_staticText_11 = new wxStaticText(page_14, wxID_ANY, wxString::FromUTF8("これは日本語の文章です。"));
    parent_sizer_9->Add(m_staticText_11, wxSizerFlags().Border(wxALL));
    page_14->SetSizerAndFit(parent_sizer_9);

    page_5->SetSizerAndFit(page_sizer_4);

    auto* page = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook->AddPage(page, "TreeBook");

    auto* page_sizer_5 = new wxBoxSizer(wxVERTICAL);

    m_treebook = new wxTreebook(page, wxID_ANY);
    {
        wxWithImages::Images bundle_list;
        bundle_list.push_back(wxue_img::bundle_english_png());
        bundle_list.push_back(wxue_img::bundle_french_png());
        bundle_list.push_back(wxue_img::bundle_japanese_png());
        m_treebook->SetImages(bundle_list);
    }
    m_treebook->SetMinSize(FromDIP(wxSize(400, 400)));
    page_sizer_5->Add(m_treebook, wxSizerFlags().Border(wxALL));

    auto* page_15 = new wxPanel(m_treebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_treebook->AddPage(page_15, "English", false, 0);
    page_15->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_10 = new wxBoxSizer(wxVERTICAL);

    m_staticText_12 = new wxStaticText(page_15, wxID_ANY, "This is a sentence in English.");
    parent_sizer_10->Add(m_staticText_12, wxSizerFlags().Border(wxALL));
    page_15->SetSizerAndFit(parent_sizer_10);

    auto* page_16 = new wxPanel(m_treebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_treebook->AddSubPage(page_16, "British", false, 1);
    page_16->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* page_sizer = new wxBoxSizer(wxVERTICAL);

    m_staticText_13 = new wxStaticText(page_16, wxID_ANY, "Theatre");
    page_sizer->Add(m_staticText_13, wxSizerFlags().Border(wxALL));
    page_16->SetSizerAndFit(page_sizer);

    auto* page_17 = new wxPanel(m_treebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_treebook->AddSubPage(page_17, "United States", false, 2);
    page_17->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* page_sizer_6 = new wxBoxSizer(wxVERTICAL);

    m_staticText_14 = new wxStaticText(page_17, wxID_ANY, "Theater");
    page_sizer_6->Add(m_staticText_14, wxSizerFlags().Border(wxALL));
    page_17->SetSizerAndFit(page_sizer_6);

    auto* page_18 = new wxPanel(m_treebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_treebook->AddPage(page_18, wxString::FromUTF8("Français"), false, 3);
    page_18->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_11 = new wxBoxSizer(wxVERTICAL);

    m_staticText_15 = new wxStaticText(page_18, wxID_ANY, wxString::FromUTF8("Ceci est une phrase en français."));
    parent_sizer_11->Add(m_staticText_15, wxSizerFlags().Border(wxALL));
    page_18->SetSizerAndFit(parent_sizer_11);

    auto* page_19 = new wxPanel(m_treebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_treebook->AddPage(page_19, wxString::FromUTF8("日本語"), false, 4);
    page_19->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer_12 = new wxBoxSizer(wxVERTICAL);

    m_staticText = new wxStaticText(page_19, wxID_ANY, wxString::FromUTF8("これは日本語の文章です。"));
    parent_sizer_12->Add(m_staticText, wxSizerFlags().Border(wxALL));
    page_19->SetSizerAndFit(parent_sizer_12);

    page->SetSizerAndFit(page_sizer_5);

    auto* page2 = new wxPanel(m_notebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_notebook->AddPage(page2, "SimpleBook");
    page2->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* page_sizer2 = new wxBoxSizer(wxVERTICAL);

    m_simplebook = new wxSimplebook(page2, wxID_ANY);
    page_sizer2->Add(m_simplebook, wxSizerFlags());

    auto* page3 = new wxPanel(m_simplebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_simplebook->AddPage(page3, "English");
    page3->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer2 = new wxBoxSizer(wxVERTICAL);

    m_staticText2 = new wxStaticText(page3, wxID_ANY, "This is a sentence in English.");
    parent_sizer2->Add(m_staticText2, wxSizerFlags().Border(wxALL));

    auto* box_sizer2 = new wxBoxSizer(wxHORIZONTAL);

    m_btn = new wxButton(page3, wxID_ANY, "French");
        m_btn->SetBitmap(wxueBundleSVG(wxue_img::french_flag_svg, 235, 461, wxSize(24, 16)));
    box_sizer2->Add(m_btn, wxSizerFlags().Border(wxALL));

    m_btn2 = new wxButton(page3, wxID_ANY, "Japanese");
        m_btn2->SetBitmap(wxueBundleSVG(wxue_img::e697a5e381aee4b8b8_svg, 209, 308, wxSize(24, 16)));
    box_sizer2->Add(m_btn2, wxSizerFlags().Border(wxALL));

    parent_sizer2->Add(box_sizer2, wxSizerFlags().Border(wxALL));
    page3->SetSizerAndFit(parent_sizer2);

    auto* page4 = new wxPanel(m_simplebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_simplebook->AddPage(page4, wxString::FromUTF8("Français"));
    page4->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer3 = new wxBoxSizer(wxVERTICAL);

    m_staticText3 = new wxStaticText(page4, wxID_ANY, wxString::FromUTF8("Ceci est une phrase en français."));
    parent_sizer3->Add(m_staticText3, wxSizerFlags().Border(wxALL));

    auto* box_sizer3 = new wxBoxSizer(wxHORIZONTAL);

    m_btn3 = new wxButton(page4, wxID_ANY, "English");
        m_btn3->SetBitmap(wxue_img::bundle_english_png());
    box_sizer3->Add(m_btn3, wxSizerFlags().Border(wxALL));

    m_btn4 = new wxButton(page4, wxID_ANY, "Japanese");
        m_btn4->SetBitmap(wxueBundleSVG(wxue_img::e697a5e381aee4b8b8_svg, 209, 308, wxSize(24, 16)));
    box_sizer3->Add(m_btn4, wxSizerFlags().Border(wxALL));

    parent_sizer3->Add(box_sizer3, wxSizerFlags().Border(wxALL));
    page4->SetSizerAndFit(parent_sizer3);

    auto* page5 = new wxPanel(m_simplebook, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    m_simplebook->AddPage(page5, wxString::FromUTF8("日本語"));
    page5->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));

    auto* parent_sizer4 = new wxBoxSizer(wxVERTICAL);

    m_staticText4 = new wxStaticText(page5, wxID_ANY, wxString::FromUTF8("これは日本語の文章です。"));
    parent_sizer4->Add(m_staticText4, wxSizerFlags().Border(wxALL));

    auto* box_sizer4 = new wxBoxSizer(wxHORIZONTAL);

    m_btn5 = new wxButton(page5, wxID_ANY, "English");
    box_sizer4->Add(m_btn5, wxSizerFlags().Border(wxALL));

    m_btn6 = new wxButton(page5, wxID_ANY, "French");
        m_btn6->SetBitmap(wxueBundleSVG(wxue_img::french_flag_svg, 235, 461, wxSize(24, 16)));
    box_sizer4->Add(m_btn6, wxSizerFlags().Border(wxALL));

    parent_sizer4->Add(box_sizer4, wxSizerFlags().Border(wxALL));
    page5->SetSizerAndFit(parent_sizer4);

    page2->SetSizerAndFit(page_sizer2);

    m_stdBtn = CreateStdDialogButtonSizer(wxOK|wxCANCEL);
    dlg_sizer->Add(CreateSeparatedSizer(m_stdBtn), wxSizerFlags().Expand().Border(wxALL));

    if (pos != wxDefaultPosition)
    {
        SetPosition(FromDIP(pos));
    }
    if (size == wxDefaultSize)
    {
        SetSizerAndFit(dlg_sizer);
    }
    else
    {
        SetSizer(dlg_sizer);
        if (size.x == wxDefaultCoord || size.y == wxDefaultCoord)
        {
            Fit();
        }
        SetSize(FromDIP(size));
        Layout();
    }
    Centre(wxBOTH);

    // Event handlers
    btn->Bind(wxEVT_BUTTON,
        [this](wxCommandEvent&)
        {
            m_choicebook->SetSelection(0);
        });
    btn_2->Bind(wxEVT_BUTTON,
        [this](wxCommandEvent&)
        {
            m_choicebook->SetSelection(2);
        });
    m_btn3->Bind(wxEVT_BUTTON,
        [this](wxCommandEvent&)
        {
            m_simplebook->ChangeSelection(0);
        });
    m_btn5->Bind(wxEVT_BUTTON,
        [this](wxCommandEvent&)
        {
            m_simplebook->ChangeSelection(0);
        });
    m_btn->Bind(wxEVT_BUTTON,
        [this](wxCommandEvent&)
        {
            m_simplebook->ChangeSelection(1);
        });
    m_btn6->Bind(wxEVT_BUTTON,
        [this](wxCommandEvent&)
        {
            m_simplebook->ChangeSelection(1);
        });
    m_btn2->Bind(wxEVT_BUTTON,
        [this](wxCommandEvent&)
        {
            m_simplebook->ChangeSelection(2);
        });
    m_btn4->Bind(wxEVT_BUTTON,
        [this](wxCommandEvent&)
        {
            m_simplebook->ChangeSelection(2);
        });

    return true;
}

namespace wxue_img
{
    // ../art/日の丸.svg
    const unsigned char e697a5e381aee4b8b8_svg[209] {
        120,218,85,144,209,110,131,48,12,69,247,41,145,159,86,169,13,37,48,134,2,225,99,22,92,112,23,18,148,164,64,255,
        126,41,15,213,120,177,229,43,249,232,216,109,88,6,182,82,31,71,5,85,57,111,192,70,164,97,140,10,202,226,53,45,232,
        3,57,171,32,231,57,176,109,50,54,200,128,158,110,10,198,24,103,153,101,235,186,242,61,225,218,77,25,176,16,159,
        6,21,220,200,152,139,127,24,148,184,160,117,125,223,104,67,243,49,9,209,187,95,188,24,178,120,119,100,165,119,15,
        251,78,39,138,232,13,165,38,69,3,93,235,81,71,182,41,184,2,123,238,245,109,253,207,89,240,170,250,62,56,200,117,
        76,160,6,178,174,213,228,181,65,166,19,164,16,192,116,194,136,156,23,69,1,204,167,3,5,175,143,155,126,248,249,204,
        235,250,124,61,151,95,167,157,144,165,111,117,31,127,16,114,99,66
    };
    // ../art/french_flag.svg
    const unsigned char french_flag_svg[235] {
        120,218,133,145,93,110,131,48,16,132,123,20,180,79,173,148,216,252,133,74,38,206,9,210,67,180,97,131,55,53,54,178,
        29,72,114,250,146,6,65,81,85,245,197,59,30,201,223,140,181,91,223,213,81,79,85,80,18,138,188,189,64,164,144,106,
        21,36,228,217,253,214,161,243,100,141,132,132,37,16,93,26,109,188,240,232,232,40,65,133,208,10,206,251,190,103,
        223,14,59,216,134,67,228,195,85,163,132,35,105,189,118,103,141,2,59,52,182,170,202,131,166,118,233,248,224,236,
        39,174,53,25,60,89,50,194,217,179,153,220,134,2,58,77,195,16,105,9,187,109,251,30,84,84,73,120,139,87,241,62,77,
        88,150,101,179,200,83,86,20,175,251,120,20,139,22,194,213,31,207,195,163,85,146,111,94,202,185,151,177,230,134,
        206,150,192,127,192,39,240,3,52,139,49,97,145,183,140,233,213,208,248,63,254,132,45,242,199,49,114,23,41,191,235,
        167,233,230,254,129,63,251,243,97,141,187,167,47,65,211,141,24
    };

    }

// ************* End of generated code ***********
// DO NOT EDIT THIS COMMENT BLOCK!
//
// Code below this comment block will be preserved
// if the code for this class is re-generated.
//
// clang-format on
// ***********************************************

/////////////////// Non-generated Copyright/License Info ////////////////////
// Purpose:   Common controls dialog
// Author:    Ralph Walden
// Copyright: Copyright (c) 2020-2023 KeyWorks Software (Ralph Walden)
// License:   Apache License -- see ../../LICENSE
/////////////////////////////////////////////////////////////////////////////

#include "mainframe.h"  // auto-generated: ../wxui_generated/mainframe_base.h and ../wxui_generated/mainframe_base.cpp

void MainFrame::OnBookTestDlg(wxCommandEvent& WXUNUSED(event))
{
    BookTestDlg dlg(this);
    dlg.ShowModal();
}
