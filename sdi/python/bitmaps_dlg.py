###############################################################################
# Code generated by wxUiEditor -- see https://github.com/KeyWorksRW/wxUiEditor/
#
# Do not edit any code above the "End of generated code" comment block.
# Any changes before that block will be lost if it is re-generated!
###############################################################################

"""BitmapsDlg class generated by wxUiEditor."""

import wx

import images
import zlib
import base64
from wx.lib.embeddedimage import PyEmbeddedImage

wxPython_svg = (
    b"eNrlWU1z2zYQ7U/BMJd0hkTwsQAWspVLDj11emjTQ2+KTMWayJaHUhI7v75vSUoWHUlRHTvTac1DyCWw"
    b"2Lf73gJUzlef3r8+v6hnKzW/GBdyQ8Xr88X8up40vzSTi3l9vW5fDU0u5YBxq/XyRq3Wd4t6XMh9NV0u"
    b"ls3oxTuW66w1LW8m0/n6bmQ0ZTY+O3dWqOVstqrX48IUrXMZCJepeHXYZ5rJ9cDnjis7cJXF1ath0Cfh"
    b"4lT8wxh0OASI89MBso8D5GOKxwrl5DoREHzxMUDvvFwnAfKRzSMBOX8M0IzkGsZg96NxREfQfL6cr+uD"
    b"fuzAzyOhUEz2GJTZBfl3D0LYXxl48scqM5vVnPwpaOApPBYN6H44hDDJwHMimo7th1x5E3Pmw64GcLI/"
    b"Bc6tHRfOkXY+51ioOzxaIp1CsqlQt25cVDFobzgYh9du8HpPG8ks02D8MLps6tm4eLGn9Op9//T2er5e"
    b"jYuPq7r5HXjq367frur71380k+vVbNlcjYu13C4m6/qlNUa7ZFyZs47W2viz4NwDyyanMznDHayUNKWQ"
    b"2XewXNQRXjJ3qFLU3uLy+1Fl8w1UoMDzo8L6q+nkph6BD4t6iopPFp8nd6sTYtsDKkipnjjm70n8k+FN"
    b"9gDe/Dx4H6uf5y6wI/5fFdgF8x8t8EHA4TGArybrZn77Esed6ALZ0siFB5xDXVlZq0NOVFZJR5MD/dtJ"
    b"HviH5eAh76O2KSIx3+a9BDBZfF8K2k+PNgVDb44N6DG9HRcRYVtmEeL0DuF6px0HnGvUbPh2NnzbIPis"
    b"jcfxwx/L1iZNNqUcI26tYZ3IS36Ol+CZlWApPYcSSOdsbccHVNYnuyFCMDpLh+jFkJ32AVzoiIApSCYk"
    b"0GvBJ3QV132ZPacWkAX+kVkQwhNnn7osOAOx+MS2z4IPOsbgQp8F+PE5xfTccrDE5juyAIyUTYihrris"
    b"TNvzcJiOpdUmUIxceo2P0kAh1VUqK8ajMVxacpqiM5KcJ9OiHODlp4nX5zeT9eXmk2A2XyxGH5vFyxdf"
    b"1//nM3m7+62DBP2qAopoOXEoswZbEzlbV6TeKBDZg7reoeLGOYcWlxQFnUNigsQ1SQ+LGUanrYmIUjKB"
    b"lOADQ3mjUzT4KkFSDFiSvFWOJSEAUIL2mVKytLVhbgA2Z2NWn5RFdhFUUJcKVGLrAoxeE1YRW7UxVhjY"
    b"2qYKDTllRyGXRgkzo0XSmEvcMYiZYIxSQPyhJB5d3MN/JaWxbFujLOrQvsSKHcpAy7BGHTiC3MqUDnEH"
    b"ZTVYkB17wIATDk5FjaIHQq56z8QKMbiHy12q3AP7hHicbiM3oIpmDDVOYVfByoT9BetGqE4cIe6wNfQ5"
    b"SS3+KSZQoBwgTWX7BPmywvbj2Uba2jDd69imsXJBB283SwNSjN4zUGOWk3AlsuRQn2RVNfAgyDIq/kZF"
    b"oGNwnUEED8ERFKxC1tjnybfyMA6Sz8YfYthf6qotVCi5y4lBTCkjKqwesbUmYBJOwFwiVZkjhbi1BAQr"
    b"6ZVq1VXECAD2vi2eizYZjyGmK/L9HLOpOvYpShGgMPd+gMxNiezOnGo7yZpW1ljIRR+8kvJhvyMZsoll"
    b"Z9bG9KVrRSJTm6n9tehEyYa9kr1SjPaJiKAZqEf40mlGeBn7soJm3qQQRBYs3zdBiJzbv04JMKReShsu"
    b"YSwUz963EurqTrmMyAkT+x0ubMnUc4lSu2rHJSIlBxwW9clxiSDrHSZ2c40hxZo4eW9RO1A4WmF6dBH7"
    b"SCmnKbjaMh0RScyQpBARPQh82yV80MxJPDzguyzzp2Jo2Jhs8wAwpHDfUrbWjQdqxSUtJbbiwhaWYbay"
    b"FnmA4s1Q7IvVVuFgVs7IICTtM9p4hCUy+mcrYNQ0pSiy61qJQAHpWWSIV0RWiIe9ktOOz2rfQl9a+YS2"
    b"/ZVQY9cbWvEItbEZCbN39CO8TmooBdRtqx4hNbXqEVZ3AmvzV+1KrrN0CpWqDKQDiQ6V049vl6h6hapW"
    b"n9g3NtKipB6IDZaBakL7a2K9WMxvVvVGODs/oqPjuLN7IX296z8UUvfYfFzUo+vl9Ze6WZ6t1s3yQ/tY"
    b"9/fV5/nF+nKEHCNxtDFezdd1s5jjn9HWdjFZXU6aZnI3mL4j2y0UztQdAkKQbICy/SEAfMA+mHB6a/AW"
    b"B6TsTU44PzV4C+VGbKC2+wVf/n/ip78B2GH9kg==")

class BitmapsDlg(wx.Dialog):
    def __init__(self, parent, id=wx.ID_ANY, title="Bitmaps Testing",
                pos=wx.DefaultPosition, size=wx.DefaultSize,
                style=wx.DEFAULT_DIALOG_STYLE, name=wx.DialogNameStr):
        wx.Dialog.__init__(self)

        if not self.Create(parent, id, title, pos, size, style, name):
            return

        dlg_sizer = wx.BoxSizer(wx.VERTICAL)

        self.tool_bar = wx.ToolBar(self, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize,
            wx.TB_HORIZONTAL)
        self.tool_bar.AddTool(wx.ID_ANY, "one", images.wxPython_2x_png.Bitmap)

        self.tool_bar.AddTool(wx.ID_ANY, "two", wx.BitmapBundle.FromBitmaps(
            images.wxPython_1_5x_png.Bitmap, images.wxPython_2x_png.Bitmap))

        self.tool_bar.AddTool(wx.ID_ANY, "three", wx.BitmapBundle.FromBitmaps([ images.
            wxPython_png.Bitmap,
                    images.wxPython_1_5x_png.Bitmap,
                    images.wxPython_2x_png.Bitmap ]))

        self.tool_bar.AddTool(wx.ID_ANY, "xpm", wx.Bitmap("../../art/english.xpm",
            wx.BITMAP_TYPE_XPM))

        _svg_string_ = zlib.decompress(base64.b64decode(wxPython_svg))
        self.tool_bar.AddTool(wx.ID_ANY, "svg",
            wx.BitmapBundle.FromSVG(_svg_string_, wx.Size(16, 16)))

        self.tool_bar.AddTool(wx.ID_ANY, "art", wx.ArtProvider.GetBitmapBundle(wx.ART_TIP,
            wx.ART_TOOLBAR))

        self.tool_bar.Realize()
        dlg_sizer.Add(self.tool_bar, wx.SizerFlags().Border(wx.ALL))

        grid_sizer = wx.GridSizer(6, 0, 0)

        static_text = wx.StaticText(self, wx.ID_ANY, "one")
        grid_sizer.Add(static_text, wx.SizerFlags().Border(wx.ALL))

        static_text2 = wx.StaticText(self, wx.ID_ANY, "two")
        grid_sizer.Add(static_text2, wx.SizerFlags().Border(wx.ALL))

        static_text3 = wx.StaticText(self, wx.ID_ANY, "three")
        grid_sizer.Add(static_text3, wx.SizerFlags().Border(wx.ALL))

        static_text4 = wx.StaticText(self, wx.ID_ANY, "xpm")
        grid_sizer.Add(static_text4, wx.SizerFlags().Border(wx.ALL))

        static_text5 = wx.StaticText(self, wx.ID_ANY, "SVG")
        grid_sizer.Add(static_text5, wx.SizerFlags().Border(wx.ALL))

        static_text6 = wx.StaticText(self, wx.ID_ANY, "art")
        grid_sizer.Add(static_text6, wx.SizerFlags().Border(wx.ALL))

        bmp = wx.StaticBitmap(self, wx.ID_ANY, wx.BitmapBundle.FromBitmap(
            images.wxPython_2x_png.Bitmap))
        grid_sizer.Add(bmp, wx.SizerFlags().Border(wx.ALL))

        bmp2 = wx.StaticBitmap(self, wx.ID_ANY, wx.BitmapBundle.FromBitmaps(
            images.wxPython_1_5x_png.Bitmap, images.wxPython_2x_png.Bitmap))
        grid_sizer.Add(bmp2, wx.SizerFlags().Border(wx.ALL))

        bitmaps = [ images.wxPython_png.Bitmap,
                    images.wxPython_1_5x_png.Bitmap,
                    images.wxPython_2x_png.Bitmap ]
        bmp3 = wx.StaticBitmap(self, wx.ID_ANY, wx.BitmapBundle.FromBitmaps(bitmaps))
        grid_sizer.Add(bmp3, wx.SizerFlags().Border(wx.ALL))

        bmp4 = wx.StaticBitmap(self, wx.ID_ANY,
            wx.Bitmap("../../art/english.xpm", wx.BITMAP_TYPE_XPM))
        grid_sizer.Add(bmp4, wx.SizerFlags().Border(wx.ALL))

        _svg_string_ = zlib.decompress(base64.b64decode(wxPython_svg))
        bmp5 = wx.StaticBitmap(self, wx.ID_ANY,
            wx.BitmapBundle.FromSVG(_svg_string_, wx.Size(16, 16)))
        grid_sizer.Add(bmp5, wx.SizerFlags().Border(wx.ALL))

        bmp6 = wx.StaticBitmap(self, wx.ID_ANY, wx.ArtProvider.GetBitmapBundle(wx.ART_TIP,
            wx.ART_TOOLBAR))
        grid_sizer.Add(bmp6, wx.SizerFlags().Border(wx.ALL))

        dlg_sizer.Add(grid_sizer, wx.SizerFlags().Border(wx.ALL))

        if "wxMac" not in wx.PlatformInfo:
            stdBtn_line = wx.StaticLine(self, wx.ID_ANY, wx.DefaultPosition, wx.Size(20, -1))
            dlg_sizer.Add(stdBtn_line, wx.SizerFlags().Expand().Border(wx.ALL))

        stdBtn = wx.StdDialogButtonSizer()
        stdBtn_OK = wx.Button(self, wx.ID_OK)
        stdBtn.SetAffirmativeButton(stdBtn_OK)
        stdBtn_Cancel = wx.Button(self, wx.ID_CANCEL)
        stdBtn.SetCancelButton(stdBtn_Cancel)
        stdBtn_OK.SetDefault()
        stdBtn.Realize()
        dlg_sizer.Add(stdBtn, wx.SizerFlags().Expand().Border(wx.ALL))

        self.SetSizerAndFit(dlg_sizer)
        self.Centre(wx.BOTH)
# ************* End of generated code ***********
# DO NOT EDIT THIS COMMENT BLOCK!
#
# Code below this comment block will be preserved
# if the code for this class is re-generated.
# ***********************************************
