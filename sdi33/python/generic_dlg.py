###############################################################################
# Code generated by wxUiEditor -- see https://github.com/KeyWorksRW/wxUiEditor/
#
# Do not edit any code above the "End of generated code" comment block.
# Any changes before that block will be lost if it is re-generated!
###############################################################################

"""GenericControlsDialog class generated by wxUiEditor."""

import wx
import io
import wx.adv

from main_test_dlg import clr_hourglass_gif

# What hath God wrought?

class GenericControlsDialog(wx.Dialog):
    def __init__(self, parent, id=wx.ID_ANY, title="Generic Controls Test Dialog",
                pos=wx.DefaultPosition, size=wx.DefaultSize,
                style=wx.DEFAULT_DIALOG_STYLE|wx.RESIZE_BORDER,
                name=wx.DialogNameStr):
        wx.Dialog.__init__(self)

        if not self.Create(parent, id, title, pos, size, style, name):
            return
        font = wx.Font(wx.SystemSettings.GetFont(wx.SYS_DEFAULT_GUI_FONT))
        font.SetSymbolicSize(wx.FONTSIZE_LARGE)
        self.SetFont(font)
        self.SetForegroundColour(wx.Colour("#FF0000"))

        box_sizer = wx.BoxSizer(wx.VERTICAL)

        panel = wx.Panel(self, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize,
            wx.TAB_TRAVERSAL)
        box_sizer.Add(panel, wx.SizerFlags().Border(wx.ALL))

        panel_sizer = wx.BoxSizer(wx.HORIZONTAL)

        bmp = wx.StaticBitmap("test", panel, wx.ID_ANY, wx.NullBitmap)
        panel_sizer.Add(bmp, wx.SizerFlags().Border(wx.ALL))

        self.animation_ctrl = wx.adv.GenericAnimationCtrl(panel, wx.ID_ANY,
            wx.adv.NullAnimation, wx.DefaultPosition, wx.DefaultSize, wx.adv.AC_DEFAULT_STYLE)
        animate = self.animation_ctrl.CreateAnimation()
        stream = io.BytesIO(clr_hourglass_gif.GetData())
        animate.Load(stream)
        self.animation_ctrl.SetAnimation(animate)
        panel_sizer.Add(self.animation_ctrl, wx.SizerFlags().Border(wx.ALL))

        box_sizer2 = wx.BoxSizer(wx.VERTICAL)

        self.staticText = wx.StaticText(panel, wx.ID_ANY, "MyLabel",
            self.FromDIP(wx.Point(50, -1)), self.FromDIP(wx.Size(100, -1)))
        box_sizer2.Add(self.staticText, wx.SizerFlags().Border(wx.ALL))

        box_sizer4 = wx.BoxSizer(wx.HORIZONTAL)

        bmp2 = wx.StaticBitmap(panel, wx.ID_ANY, wx.NullBitmap)
        box_sizer4.Add(bmp2, wx.SizerFlags().Border(wx.ALL))

        box_sizer2.Add(box_sizer4, wx.SizerFlags(2).Border(wx.ALL))

        self.collapsible_pane = wx.CollapsiblePane(panel, wx.ID_ANY, "collapsible")
        self.collapsible_pane.Expand()
        box_sizer2.Add(self.collapsible_pane, wx.SizerFlags().Expand().Border(wx.ALL))

        box_sizer3 = wx.BoxSizer(wx.HORIZONTAL)

        self.staticText2 = wx.StaticText(self.collapsible_pane.GetPane(), wx.ID_ANY,
            "MyLabel")
        box_sizer3.Add(self.staticText2, wx.SizerFlags().Border(wx.ALL))
        self.collapsible_pane.GetPane().SetSizerAndFit(box_sizer3)

        panel_sizer.Add(box_sizer2, wx.SizerFlags().Expand().Border(wx.ALL))
        panel.SetSizerAndFit(panel_sizer)

        grid_bag_sizer = wx.GridBagSizer()

        self.hyperlink = wx.adv.HyperlinkCtrl(self, wx.ID_ANY, "Hyperlink", "")
        grid_bag_sizer.Add(self.hyperlink, wx.GBPosition(0, 0), wx.GBSpan(1, 1), wx.ALL, 5)

        self.calendar = wx.adv.CalendarCtrl(self, wx.ID_ANY, wx.DefaultDateTime,
            wx.DefaultPosition, wx.DefaultSize, wx.adv.CAL_SHOW_HOLIDAYS)
        grid_bag_sizer.Add(self.calendar, wx.GBPosition(1, 0), wx.GBSpan(1, 1), wx.ALL, 5)

        self.treeCtrl = wx.TreeCtrl(self, wx.ID_ANY)
        grid_bag_sizer.Add(self.treeCtrl, wx.GBPosition(1, 2), wx.GBSpan(1, 1), wx.ALL, 5)

        grid_bag_sizer.AddGrowableCol(1, 3)
        grid_bag_sizer.AddGrowableCol(3)
        box_sizer.Add(grid_bag_sizer, wx.SizerFlags().Border(wx.ALL))

        stdBtn = self.CreateStdDialogButtonSizer(wx.OK|wx.CANCEL)
        box_sizer.Add(self.CreateSeparatedSizer(stdBtn),
            wx.SizerFlags().Expand().Border(wx.ALL))

        self.SetSizerAndFit(box_sizer)
# ************* End of generated code ***********
# DO NOT EDIT THIS COMMENT BLOCK!
#
# Code below this comment block will be preserved
# if the code for this class is re-generated.
# ***********************************************
