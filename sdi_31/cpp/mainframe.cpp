///////////////////////////////////////////////////////////////////////////////
// Code generated by wxUiEditor - see https://github.com/KeyWorksRW/wxUiEditor/
//
// Do not edit any code above the "End of generated code" comment block.
// Any changes before that block will be lost if it is re-generated!
///////////////////////////////////////////////////////////////////////////////

// clang-format off

#include <wx/accel.h>
#include <wx/artprov.h>

#include "mainframe.h"

#include <wx/mstream.h>  // memory stream classes

// Convert a data array into a wxImage
wxImage wxueImage(const unsigned char* data, size_t size_data)
{
    wxMemoryInputStream strm(data, size_data);
    wxImage image;
    image.LoadFile(strm);
    return image;
};

bool MainFrame::Create(wxWindow* parent, wxWindowID id, const wxString& title,
    const wxPoint& pos, const wxSize& size, long style, const wxString &name)
{

    if (!wxImage::FindHandler(wxBITMAP_TYPE_PNG))
        wxImage::AddHandler(new wxPNGHandler);

    if (!wxFrame::Create(parent, id, title, pos, size, style, name))
        return false;
    SetMinSize(ConvertDialogToPixels(wxSize(200, 100)));

    splitter = new wxSplitterWindow(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxSP_3D);
    splitter->SetSashGravity(0.0);
    splitter->SetMinimumPaneSize(150);
    splitter->SetMinSize(ConvertDialogToPixels(wxSize(200, 200)));

    propertyGridManager = new wxPropertyGridManager(splitter, wxID_ANY, wxDefaultPosition, wxDefaultSize,
        wxPG_AUTO_SORT|wxPG_BOLD_MODIFIED|wxPG_SPLITTER_AUTO_CENTER|wxPG_DESCRIPTION|wxPG_TOOLBAR|wxPG_NO_INTERNAL_BORDER);
    propertyGridManager->SetExtraStyle(wxPG_EX_MODE_BUTTONS);

    propertyGridPage = propertyGridManager->AddPage("Animal Page",
        wxBitmapBundle::FromBitmap(wxueImage(wxue_img::wxPython_1_5x_png, sizeof(wxue_img::wxPython_1_5x_png))));

    propertyGridItem_7 = propertyGridPage->Append(new wxPropertyCategory("Pets", "Pets"));

    propertyGridItem_2 = propertyGridPage->Append(new wxStringProperty("dog", "Woof!"));

    propertyGridItem = propertyGridPage->Append(new wxStringProperty("cat", "Meow!"));

    propertyGridItem_5 = propertyGridPage->Append(new wxPropertyCategory("Big Animals", "Big Animals"));

    propertyGridItem_8 = propertyGridPage->Append(new wxStringProperty("horses", wxEmptyString));

    propertyGridPage_2 = propertyGridManager->AddPage("Number Page",
        wxBitmapBundle::FromBitmap(wxueImage(wxue_img::english_png, sizeof(wxue_img::english_png))));

    propertyGridItem_6 = propertyGridPage_2->Append(new wxPropertyCategory("Numbers", "Numbers"));

    propertyGridItem_3 = propertyGridPage_2->Append(new wxIntProperty("1", wxEmptyString));

    propertyGridItem_4 = propertyGridPage_2->Append(new wxIntProperty("2", wxEmptyString));

    m_kicadGrid = new wxGrid(splitter, wxID_ANY);
    {
        m_kicadGrid->CreateGrid(2, 11);
        m_kicadGrid->EnableDragGridSize(false);
        m_kicadGrid->SetMargins(0, 0);
        {
            wxFontInfo font_info(wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT).GetPointSize());
            m_kicadGrid->SetLabelFont(wxFont(font_info));
        }

        m_kicadGrid->SetDefaultCellAlignment(wxALIGN_LEFT, wxALIGN_TOP);
        m_kicadGrid->SetColLabelAlignment(wxALIGN_CENTER, wxALIGN_CENTER);
        m_kicadGrid->SetColLabelSize(24);
        m_kicadGrid->SetColSize(0, 124);
        m_kicadGrid->SetColSize(1, 60);
        m_kicadGrid->SetColSize(2, 110);
        m_kicadGrid->SetColSize(3, 110);
        m_kicadGrid->SetColSize(4, 110);
        m_kicadGrid->SetColSize(5, 60);
        m_kicadGrid->SetColSize(6, 110);
        m_kicadGrid->SetColSize(7, 110);
        m_kicadGrid->SetColSize(8, 110);
        m_kicadGrid->SetColSize(9, 110);
        m_kicadGrid->SetColSize(10, 110);
        m_kicadGrid->SetColLabelValue(0, "Text Items");
        m_kicadGrid->SetColLabelValue(1, "Show");
        m_kicadGrid->SetColLabelValue(2, "Width");
        m_kicadGrid->SetColLabelValue(3, "Height");
        m_kicadGrid->SetColLabelValue(4, "Thickness");
        m_kicadGrid->SetColLabelValue(5, "Italic");
        m_kicadGrid->SetColLabelValue(6, "Layer");
        m_kicadGrid->SetColLabelValue(7, "Orientation");
        m_kicadGrid->SetColLabelValue(8, "Unconstrained");
        m_kicadGrid->SetColLabelValue(9, "X Offset");
        m_kicadGrid->SetColLabelValue(10, "Y Offset");

        m_kicadGrid->EnableDragRowSize(false);
        m_kicadGrid->SetRowLabelAlignment(wxALIGN_LEFT, wxALIGN_CENTER);
        m_kicadGrid->SetRowLabelSize(160);
        m_kicadGrid->SetRowLabelValue(0, "Reference designator");
        m_kicadGrid->SetRowLabelValue(1, "Value");
    }
    m_kicadGrid->SetMinSize(wxSize(800, 140));
    splitter->SplitHorizontally(propertyGridManager, m_kicadGrid);

    auto* menubar = new wxMenuBar();

    menu = new wxMenu();
    auto* menuQuit = new wxMenuItem(menu, wxID_EXIT);
    {
        wxAcceleratorEntry entry;
        if (entry.FromString("ALT+X"))
            menuQuit->AddExtraAccel(entry);
    }

    menuQuit->SetBitmap(wxArtProvider::GetBitmapBundle(wxART_QUIT, wxART_MENU));

    menu->Append(menuQuit);
    menubar->Append(menu, wxGetStockLabel(wxID_FILE));

    auto* menuDialogs = new wxMenu();
    auto* menu_item_3 = new wxMenuItem(menuDialogs, wxID_ANY, "MainTestDlg");
    menu_item_3->SetBitmap(wxBitmapBundle::FromBitmap(wxueImage(wxue_img::debug_32_png, sizeof(wxue_img::debug_32_png))));

    menuDialogs->Append(menu_item_3);
    auto* menu_item_4 = new wxMenuItem(menuDialogs, wxID_ANY, "BookTestDlg");
    menu_item_4->SetBitmap(wxBitmapBundle::FromBitmap(wxueImage(wxue_img::wxNotebook_png, sizeof(wxue_img::wxNotebook_png))));

    menuDialogs->Append(menu_item_4);
    auto* menu_item_2 = new wxMenuItem(menuDialogs, wxID_ANY, "PythonDlg");
    {
        wxVector<wxBitmap> bitmaps;
        bitmaps.push_back(wxueImage(wxue_img::wxPython_png, sizeof(wxue_img::wxPython_png)));
        bitmaps.push_back(wxueImage(wxue_img::wxPython_1_5x_png, sizeof(wxue_img::wxPython_1_5x_png)));
        bitmaps.push_back(wxueImage(wxue_img::wxPython_2x_png, sizeof(wxue_img::wxPython_2x_png)));
        menu_item_2->SetBitmap(wxBitmapBundle::FromBitmaps(bitmaps));
    }

    menuDialogs->Append(menu_item_2);
    auto* menu_tools_dlg2 = new wxMenuItem(menuDialogs, wxID_ANY, "Tools Dialog",
        "Dialog for testing different types of toolbars", wxITEM_NORMAL);
    menu_tools_dlg2->SetBitmap(wxBitmapBundle::FromBitmap(wxueImage(wxue_img::wxToolBar_png, sizeof(wxue_img::wxToolBar_png))));

    menuDialogs->Append(menu_tools_dlg2);
    auto* menuItem3 = new wxMenuItem(menuDialogs, wxID_ANY, "Wizard");
    menuItem3->SetBitmap(wxBitmapBundle::FromBitmap(wxueImage(wxue_img::wxWizard_png, sizeof(wxue_img::wxWizard_png))));

    menuDialogs->Append(menuItem3);
    menuDialogs->AppendSeparator();
    auto* menuItem_2 = new wxMenuItem(menuDialogs, wxID_ANY, "Common Controls...", "Common controls", wxITEM_NORMAL);
    menuItem_2->SetBitmap(wxArtProvider::GetBitmapBundle(wxART_TIP, wxART_MENU));

    menuDialogs->Append(menuItem_2);
    menuDialogs->AppendSeparator();

    auto* submenu = new wxMenu();
    auto* menu_item_5 = new wxMenuItem(submenu, wxID_ANY, "DlgIssue_956");
    menu_item_5->SetBitmap(wxBitmapBundle::FromBitmap(wxueImage(wxue_img::debug_32_png, sizeof(wxue_img::debug_32_png))));

    submenu->Append(menu_item_5);
    auto* menu_item_6 = new wxMenuItem(submenu, wxID_ANY, "DlgIssue_960");
    menu_item_6->SetBitmap(wxBitmapBundle::FromBitmap(wxueImage(wxue_img::Ainsi_c3_a_se_passe_png, sizeof(wxue_img::Ainsi_c3_a_se_passe_png))));

    submenu->Append(menu_item_6);
    auto* submenu_item = menuDialogs->AppendSubMenu(submenu, "Issue Dialogs");
    submenu_item->SetBitmap(wxBitmapBundle::FromBitmap(wxueImage(wxue_img::wxDialog_png, sizeof(wxue_img::wxDialog_png))));
    menubar->Append(menuDialogs, "&Dialogs");

    SetMenuBar(menubar);

    m_toolBar = CreateToolBar();

    auto* tool_dropdown = m_toolBar->AddTool(wxID_ANY, wxEmptyString, wxArtProvider::GetBitmapBundle(wxART_EXECUTABLE_FILE,
        wxART_MENU), wxEmptyString, wxITEM_DROPDOWN);
    auto* tool_dropdown_menu = new wxMenu;
    auto* menu_item = new wxMenuItem(tool_dropdown_menu, wxID_ANY, "Wizard...");
    menu_item->SetBitmap(wxArtProvider::GetBitmapBundle(wxART_FIND, wxART_MENU));

    tool_dropdown_menu->Append(menu_item);
    auto* menu_tools_dlg = new wxMenuItem(tool_dropdown_menu, wxID_ANY, "Tools Dialog",
        "Dialog for testing different types of toolbars", wxITEM_NORMAL);
    menu_tools_dlg->SetBitmap(wxBitmapBundle::FromBitmap(wxueImage(wxue_img::wxToolBar_png, sizeof(wxue_img::wxToolBar_png))));

    tool_dropdown_menu->Append(menu_tools_dlg);
    tool_dropdown->SetDropdownMenu(tool_dropdown_menu);
    auto* tool_4 = m_toolBar->AddTool(wxID_ANY, "MainTestDlg",
        wxueImage(wxue_img::debug_32_png, sizeof(wxue_img::debug_32_png)));

    auto* tool_5 = m_toolBar->AddTool(wxID_ANY, "BookTestDlg",
        wxueImage(wxue_img::wxNotebook_png, sizeof(wxue_img::wxNotebook_png)));

    m_toolBar->AddSeparator();
    auto* tool_3 = m_toolBar->AddTool(wxID_ANY, "PythonDlg",
        wxueImage(wxue_img::wxPython_1_5x_png, sizeof(wxue_img::wxPython_1_5x_png)));

    m_toolBar->AddStretchableSpace();

    auto* tool_2 = m_toolBar->AddTool(wxID_ANY, "Common Controls...", wxArtProvider::GetBitmapBundle(wxART_TIP, wxART_TOOLBAR));

    m_toolBar->Realize();

    m_statusBar = CreateStatusBar(2);
    {
        const int sb_field_widths[2] = {100, -1};
        m_statusBar->SetStatusWidths(2, sb_field_widths);
        const int sb_field_styles[2] = {wxSB_FLAT, wxSB_FLAT};
        m_statusBar->SetStatusStyles(2, sb_field_styles);
    }

    Centre(wxBOTH);

    // Event handlers
    Bind(wxEVT_MENU, &MainFrame::OnQuit, this, wxID_EXIT);
    Bind(wxEVT_MENU, &MainFrame::OnMainTestDlg, this, menu_item_3->GetId());
    Bind(wxEVT_MENU, &MainFrame::OnBookTestDlg, this, menu_item_4->GetId());
    Bind(wxEVT_MENU, &MainFrame::OnPythonDlg, this, menu_item_2->GetId());
    Bind(wxEVT_MENU, &MainFrame::OnToolsDlg, this, menu_tools_dlg2->GetId());
    Bind(wxEVT_MENU, &MainFrame::OnWizard, this, menuItem3->GetId());
    Bind(wxEVT_MENU, &MainFrame::OnCommonDialog, this, menuItem_2->GetId());
    Bind(wxEVT_MENU, &MainFrame::OnDlgIssue_956, this, menu_item_5->GetId());
    Bind(wxEVT_MENU, &MainFrame::OnDlgIssue_960, this, menu_item_6->GetId());
    Bind(wxEVT_MENU, &MainFrame::OnWizard, this, menu_item->GetId());
    Bind(wxEVT_MENU, &MainFrame::OnToolsDlg, this, menu_tools_dlg->GetId());
    m_kicadGrid->Bind(wxEVT_SIZE, &MainFrame::OnGridSize, this);
    Bind(wxEVT_TOOL, &MainFrame::OnMainTestDlg, this, tool_4->GetId());
    Bind(wxEVT_TOOL, &MainFrame::OnBookTestDlg, this, tool_5->GetId());
    Bind(wxEVT_TOOL, &MainFrame::OnPythonDlg, this, tool_3->GetId());
    Bind(wxEVT_TOOL, &MainFrame::OnCommonDialog, this, tool_2->GetId());

    return true;
}

namespace wxue_img
{
    // Ainsi ça se passe.png
    const unsigned char Ainsi_c3_a_se_passe_png[148] {
        137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,24,0,0,0,24,8,6,0,0,0,224,119,61,248,0,0,0,9,112,72,89,115,
        0,0,11,19,0,0,11,19,1,0,154,156,24,0,0,0,70,73,68,65,84,72,199,99,96,24,62,32,237,204,127,134,180,51,255,169,202,
        102,96,96,96,26,166,65,68,69,115,70,131,104,52,136,70,131,104,52,136,70,131,136,26,128,17,197,107,12,12,12,255,
        103,153,80,102,96,218,25,8,99,150,9,227,112,75,69,52,2,0,227,151,80,146,60,123,246,21,0,0,0,0,73,69,78,68,174,66,
        96,130
    };

    const unsigned char debug_32_png[1701] {
        137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,32,0,0,0,32,8,6,0,0,0,115,122,122,244,0,0,0,9,112,72,89,115,
        0,0,11,19,0,0,11,19,1,0,154,156,24,0,0,6,87,73,68,65,84,88,195,237,151,93,136,93,87,21,199,127,123,159,115,238,
        157,123,111,38,51,25,51,83,147,113,74,13,54,9,147,22,209,84,180,10,17,107,52,85,208,80,226,131,160,136,15,10,250,
        36,65,124,147,16,65,136,79,126,60,216,32,136,69,171,47,18,65,74,44,164,212,72,141,78,107,107,146,50,214,116,232,
        140,101,106,134,196,204,87,110,230,126,157,187,191,150,15,231,220,115,231,102,74,108,205,131,47,110,88,236,115,
        246,57,103,237,255,90,235,191,214,94,7,254,199,67,1,204,207,207,75,189,94,39,132,128,214,122,224,133,88,107,2,108,
        89,191,227,8,129,0,132,16,110,91,238,223,143,142,142,178,111,223,62,21,3,44,45,45,113,226,196,9,42,149,10,0,90,
        131,82,154,56,142,1,136,34,141,82,17,81,164,250,200,85,52,160,92,196,23,215,206,57,188,15,68,145,198,251,48,176,
        6,208,237,118,57,121,242,100,102,32,128,49,6,231,28,214,90,190,245,228,51,111,106,148,21,112,65,136,117,31,68,239,
        222,5,201,238,253,224,55,78,4,241,160,34,48,30,254,217,22,206,127,227,8,198,24,140,49,153,177,0,214,90,188,203,
        64,244,54,235,73,199,11,45,39,24,159,111,118,109,158,212,102,247,206,67,106,179,185,26,12,241,202,2,78,132,110,
        200,196,120,8,26,26,14,174,108,4,86,187,82,132,193,90,219,7,192,166,203,142,207,149,7,41,148,135,144,73,211,4,210,
        210,8,173,167,30,71,215,87,138,141,166,174,189,204,205,231,206,48,62,241,78,188,128,15,153,68,192,141,84,248,123,
        61,144,110,242,142,207,13,45,66,224,189,199,58,71,25,104,117,133,40,2,241,16,110,11,131,115,130,170,237,100,165,
        219,101,232,245,89,22,103,127,207,112,37,161,250,224,39,121,125,105,137,90,60,76,219,244,191,186,218,18,54,172,
        12,232,200,200,28,240,222,247,1,20,68,10,62,39,137,220,22,203,156,197,177,98,212,167,212,38,74,76,69,39,248,225,
        83,77,150,111,92,227,103,63,120,134,237,187,191,140,73,45,38,85,164,33,139,183,245,130,82,10,145,108,206,172,183,
        88,23,138,112,235,30,67,33,224,115,183,167,54,12,138,19,82,19,48,109,207,114,154,240,220,153,39,249,230,119,154,
        124,224,225,71,104,155,136,71,191,240,50,47,62,125,134,171,27,176,220,17,230,214,60,237,78,192,26,193,116,179,217,
        185,76,122,251,245,50,44,222,204,1,239,28,169,9,160,85,241,178,4,1,250,30,169,255,238,52,95,252,203,117,154,35,
        129,243,245,191,114,228,163,247,241,137,153,69,198,95,90,226,141,87,159,229,242,216,199,138,84,214,155,50,38,228,
        58,124,232,131,24,32,97,111,33,53,66,171,233,233,166,1,231,4,107,50,41,117,110,226,47,253,150,240,155,95,241,158,
        198,58,143,77,127,144,215,94,11,252,109,206,240,41,42,76,174,45,195,19,143,179,119,233,105,38,147,118,97,113,79,
        172,17,188,147,45,233,173,251,46,209,148,74,9,198,8,62,128,117,208,110,11,169,129,182,129,242,191,94,161,113,255,
        103,249,135,134,231,243,130,245,53,5,223,222,49,74,181,92,230,215,67,101,86,157,161,190,251,16,187,86,46,33,30,
        188,149,66,66,200,128,196,113,76,28,199,164,105,58,24,130,90,181,70,82,42,211,49,178,185,162,22,99,97,228,195,96,
        133,67,141,13,42,157,148,159,204,252,153,247,149,202,76,236,216,193,247,55,110,241,241,102,147,87,174,47,49,219,
        173,240,70,242,48,113,200,54,237,133,65,103,85,191,32,250,64,26,58,231,88,91,191,201,240,182,42,54,119,147,245,
        91,129,120,47,124,104,168,204,247,98,205,5,99,56,190,209,96,185,213,228,167,90,209,214,154,207,85,171,156,55,130,
        142,50,14,101,0,122,233,151,129,49,198,210,106,181,182,2,0,176,46,208,78,179,221,140,19,74,177,194,108,138,219,
        174,114,155,87,75,101,142,117,82,30,140,99,246,7,207,129,86,202,245,68,243,128,177,204,239,24,195,89,65,121,41,
        206,141,64,150,130,206,101,96,172,51,91,57,208,43,70,16,232,26,193,56,193,58,104,165,217,108,29,116,186,194,194,
        165,11,92,124,255,17,126,164,53,123,157,163,33,160,85,224,211,198,242,99,173,88,216,57,193,228,173,151,50,82,91,
        193,123,65,2,132,220,155,33,207,128,94,25,222,82,136,156,11,180,140,16,41,176,155,42,152,19,104,52,60,178,114,139,
        242,67,95,162,115,246,9,158,93,91,197,1,45,17,106,10,100,215,110,222,245,249,175,243,194,139,11,132,234,67,168,
        8,8,32,121,248,226,164,159,146,145,214,91,211,48,228,165,209,116,3,27,157,128,241,66,199,9,245,166,103,237,166,
        163,106,174,177,127,2,22,101,156,201,175,252,18,189,99,172,143,126,124,156,169,175,254,156,63,212,119,243,192,68,
        194,174,248,86,70,56,223,183,186,231,17,231,2,126,19,187,11,29,62,4,68,60,245,84,136,37,115,93,219,101,196,3,184,
        255,29,129,231,245,99,40,39,108,220,243,94,198,190,59,131,158,251,35,73,164,81,211,135,88,239,110,135,46,220,24,
        122,148,143,212,150,185,186,182,157,56,206,203,175,21,162,68,33,97,176,111,24,4,224,61,222,11,198,74,81,146,55,
        143,63,173,77,102,21,209,67,20,41,22,154,219,137,223,253,153,204,141,237,188,242,41,112,74,113,97,245,30,226,68,
        101,214,7,72,202,186,72,73,95,240,33,108,229,0,128,237,6,236,155,52,36,146,187,82,229,74,54,119,71,58,47,221,61,
        139,181,234,151,242,56,206,128,136,207,2,46,161,127,18,22,0,122,7,131,132,64,227,23,143,20,45,87,36,130,74,18,146,
        88,3,154,40,142,209,90,161,116,132,214,186,232,19,125,8,40,192,134,128,4,79,39,7,235,243,67,174,147,154,162,220,
        7,201,158,149,74,165,62,128,169,169,41,78,157,58,85,48,179,231,30,173,245,64,35,249,86,27,211,94,115,123,251,92,
        88,29,199,76,77,77,245,187,226,183,59,78,159,62,45,213,106,117,96,179,245,245,117,142,31,63,254,182,245,197,255,
        13,128,195,135,15,19,242,88,214,235,117,86,86,86,238,238,191,224,63,141,139,23,47,202,234,234,42,59,119,238,196,
        57,71,163,209,40,234,185,115,14,231,28,163,163,163,84,42,21,106,181,26,189,119,15,30,60,168,238,26,192,229,203,
        151,101,100,100,36,255,63,136,138,211,169,190,177,49,16,130,225,225,225,236,121,8,120,145,172,207,180,150,233,233,
        233,59,238,113,71,86,205,204,204,200,216,216,24,145,82,68,106,80,79,146,36,84,171,85,182,109,219,198,208,208,80,
        255,60,201,201,22,69,17,181,74,133,153,153,25,185,43,15,156,61,123,86,246,239,221,139,40,133,181,150,40,138,6,242,
        184,168,239,249,122,146,36,133,87,102,103,103,57,118,236,152,186,107,14,0,156,59,119,78,230,230,230,56,112,224,
        0,247,221,123,47,149,90,45,243,68,28,99,157,163,217,108,178,184,184,200,149,43,87,216,179,103,15,71,143,30,85,252,
        127,188,133,241,111,49,200,16,194,249,221,92,25,0,0,0,0,73,69,78,68,174,66,96,130
    };

    const unsigned char english_png[541] {
        137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,19,0,0,0,15,8,2,0,0,0,137,38,99,123,0,0,0,3,115,66,73,84,8,
        8,8,219,225,79,224,0,0,0,9,112,72,89,115,0,0,10,240,0,0,10,240,1,66,172,52,152,0,0,1,192,73,68,65,84,40,207,157,
        83,61,111,19,65,16,125,239,118,238,203,95,137,125,177,131,34,1,226,15,160,72,41,105,160,68,80,64,69,195,31,224,
        215,81,64,131,132,252,15,16,18,13,200,82,42,8,200,137,141,109,238,108,159,125,183,59,20,119,132,200,161,33,83,140,
        70,187,59,243,230,205,188,165,115,14,55,50,89,46,183,89,86,20,165,131,2,4,20,0,84,225,123,182,141,165,161,133,115,
        36,65,214,23,164,231,7,166,213,150,79,31,207,94,191,57,29,159,231,198,208,169,150,133,51,226,145,104,97,245,60,
        120,223,55,169,161,173,202,213,70,132,7,183,6,207,94,10,252,232,248,228,206,232,116,222,235,70,105,90,92,76,214,
        131,126,148,231,214,208,118,30,188,74,14,124,17,175,130,170,49,1,9,195,176,63,144,114,91,124,59,203,64,47,91,150,
        23,211,188,221,14,172,5,232,245,154,46,29,190,253,213,88,139,167,53,22,180,202,244,187,73,248,232,137,144,116,78,
        109,233,10,64,21,69,233,170,210,219,194,50,110,177,33,52,184,100,88,247,27,183,105,68,36,144,123,119,59,159,71,
        179,164,23,4,1,199,227,85,247,176,177,90,151,89,142,232,254,113,148,24,49,220,157,106,28,155,253,68,68,139,209,
        151,31,179,159,155,249,116,225,156,58,135,179,175,185,170,54,177,92,15,135,11,147,26,216,157,204,32,57,140,159,
        190,224,108,60,153,126,63,223,172,115,86,252,171,197,16,70,93,132,220,192,98,23,18,126,163,217,57,186,45,38,157,
        240,195,59,73,23,245,241,149,49,110,200,127,40,64,33,157,189,198,195,199,2,35,50,56,210,176,241,31,234,217,219,
        167,17,207,19,129,181,4,249,167,173,42,184,238,255,6,214,210,136,176,216,74,158,97,53,71,77,180,126,67,82,85,43,
        143,75,17,145,80,136,208,179,91,186,77,110,55,185,150,229,213,141,213,83,186,30,171,130,164,24,19,198,188,241,95,
        249,13,105,22,212,221,168,158,98,220,0,0,0,0,73,69,78,68,174,66,96,130
    };

    const unsigned char wxDialog_png[636] {
        137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,22,0,0,0,22,8,6,0,0,0,196,180,108,59,0,0,0,9,112,72,89,115,
        0,0,11,19,0,0,11,19,1,0,154,156,24,0,0,2,46,73,68,65,84,56,203,181,149,65,107,19,81,16,199,127,187,217,46,137,169,
        105,83,208,131,232,197,107,192,226,169,7,191,128,199,30,122,211,66,17,5,253,6,94,68,68,16,252,0,94,42,42,222,122,
        216,67,234,41,7,233,61,34,74,48,17,4,111,193,92,114,73,147,26,105,179,111,198,195,190,221,108,146,110,155,82,58,
        176,204,123,59,239,205,155,249,207,127,222,131,11,18,39,30,188,218,237,168,0,168,130,2,42,168,234,196,7,160,98,
        255,99,215,136,34,170,44,184,138,43,35,158,111,222,114,0,92,128,23,59,191,180,176,0,225,247,109,138,190,67,216,
        120,75,49,159,195,252,120,143,52,63,112,185,232,195,207,143,148,22,125,150,74,121,150,75,5,202,165,2,229,165,34,
        43,229,69,252,205,199,56,247,158,80,44,149,120,250,238,155,2,120,0,234,122,236,127,217,6,136,116,101,43,153,83,
        217,162,111,199,253,191,163,140,124,35,233,255,51,140,140,51,54,61,219,249,173,215,87,252,76,176,156,105,15,199,
        138,114,116,20,210,238,236,243,250,209,109,199,3,200,231,224,206,213,206,185,11,214,117,111,114,56,56,32,129,34,
        142,39,168,214,216,88,191,155,232,88,42,171,107,167,58,109,53,234,92,242,29,188,28,99,199,216,138,167,157,6,213,
        90,242,239,79,103,190,108,68,5,35,66,194,10,75,158,115,75,14,16,35,227,136,213,158,18,71,152,214,0,189,110,123,
        46,199,161,8,146,142,88,84,207,132,103,214,154,208,72,18,164,155,198,56,222,16,235,160,90,75,190,105,167,211,107,
        34,144,73,58,52,130,34,106,102,90,141,58,149,213,53,90,141,250,12,28,233,234,103,173,17,219,238,99,40,82,24,199,
        27,78,163,86,6,47,16,77,21,207,24,51,97,94,190,114,99,102,75,92,192,147,108,32,152,208,164,89,49,75,183,207,141,
        201,123,161,185,23,176,117,127,227,68,155,24,65,109,144,238,52,221,230,145,188,111,47,26,135,164,211,162,204,199,
        29,225,29,183,177,215,109,211,220,11,200,178,125,173,5,89,247,80,34,94,86,84,113,218,103,181,77,56,238,15,134,180,
        135,215,80,149,136,210,26,245,189,147,162,145,216,58,68,201,198,175,140,157,171,146,115,29,134,135,3,122,7,102,
        242,170,126,240,242,147,138,68,79,141,138,32,106,181,49,72,124,160,229,188,138,36,205,16,209,75,163,23,77,148,221,
        55,15,29,46,82,254,3,136,174,81,14,10,69,149,111,0,0,0,0,73,69,78,68,174,66,96,130
    };

    const unsigned char wxNotebook_png[177] {
        137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,22,0,0,0,22,8,6,0,0,0,196,180,108,59,0,0,0,9,112,72,89,115,
        0,0,11,19,0,0,11,19,1,0,154,156,24,0,0,0,99,73,68,65,84,56,203,99,96,160,37,248,143,7,20,244,236,37,90,12,217,76,
        22,24,227,230,205,155,56,45,158,57,115,38,154,136,42,86,49,100,192,68,171,80,160,153,193,140,176,48,190,122,241,
        36,86,5,218,250,230,36,25,88,216,187,143,97,66,137,51,35,11,33,133,184,44,28,176,160,24,53,120,212,224,81,131,71,
        13,38,6,192,75,183,57,123,190,50,12,9,0,0,126,235,89,63,162,177,243,95,0,0,0,0,73,69,78,68,174,66,96,130
    };

    const unsigned char wxPython_1_5x_png[765] {
        137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,24,0,0,0,24,8,6,0,0,0,224,119,61,248,0,0,0,9,112,72,89,115,
        0,0,11,19,0,0,11,19,1,0,154,156,24,0,0,2,175,73,68,65,84,72,199,173,148,207,75,20,97,24,199,63,235,15,72,232,176,
        120,73,34,112,64,236,34,184,211,161,147,208,142,23,59,116,104,173,91,160,174,167,244,176,176,155,122,118,61,151,
        76,32,100,208,97,86,250,3,236,108,135,119,21,42,61,57,43,8,97,44,51,94,180,32,118,71,148,78,198,219,97,94,183,113,
        118,198,85,235,11,47,207,59,239,251,252,224,253,206,243,124,219,137,134,158,78,167,15,53,77,43,118,118,118,30,213,
        106,181,77,254,35,210,185,92,206,145,10,150,101,73,96,62,176,254,9,58,224,8,33,164,97,24,210,178,44,41,165,148,
        186,174,75,33,132,20,66,72,192,188,78,98,141,1,182,121,130,100,14,105,190,51,207,30,32,13,195,144,245,122,93,150,
        203,229,134,5,138,151,77,220,161,236,4,147,232,164,252,143,194,90,129,163,133,35,0,92,215,197,243,60,132,16,244,
        246,246,94,147,150,12,14,31,144,124,12,172,87,127,87,62,159,111,188,72,127,170,75,50,56,138,206,150,72,168,2,171,
        76,160,113,51,198,171,10,188,81,251,69,101,103,129,10,137,86,5,218,129,239,124,37,201,125,12,122,98,188,186,129,
        135,106,5,241,153,125,192,190,168,64,155,178,43,88,216,44,71,120,44,199,68,142,0,144,189,12,69,103,44,232,91,240,
        250,89,216,35,79,138,59,36,233,1,110,53,221,217,236,50,10,184,64,90,157,86,0,239,92,129,170,127,57,220,23,221,126,
        89,64,227,1,105,52,12,198,2,55,59,192,12,11,128,195,24,37,0,182,40,177,199,100,184,77,13,160,28,243,74,63,112,3,
        141,13,52,78,16,76,55,249,84,216,81,180,189,32,203,20,30,80,0,104,171,250,237,182,15,60,110,197,231,208,16,230,
        118,9,180,27,234,96,16,152,99,158,219,24,84,72,240,146,34,39,192,0,6,160,93,117,94,230,133,64,74,137,44,86,67,51,
        147,66,54,152,200,224,176,200,149,166,29,64,228,114,56,245,186,95,192,249,133,212,55,3,5,222,18,212,40,193,42,141,
        97,236,184,32,105,146,126,76,186,200,50,14,221,199,144,76,42,225,234,130,100,48,178,15,128,123,234,107,152,34,146,
        20,26,33,183,243,232,199,228,57,89,82,170,91,174,2,217,60,104,97,152,204,168,228,17,88,57,4,251,184,233,56,21,53,
        120,109,49,210,109,168,103,251,58,52,195,122,173,134,235,121,224,157,66,185,238,219,80,250,36,115,88,12,34,27,122,
        21,83,192,151,238,243,82,97,44,45,81,178,109,40,236,65,233,32,20,177,166,104,25,81,98,248,3,216,103,29,112,59,90,
        242,57,13,76,33,200,160,21,126,131,125,16,225,179,6,252,164,192,172,234,164,83,108,118,201,2,110,34,82,26,242,152,
        60,34,121,97,225,42,112,2,124,194,101,149,209,56,85,141,211,243,44,227,88,12,170,95,23,196,123,101,191,176,194,
        55,92,37,49,229,150,106,26,1,131,187,76,208,21,234,140,10,195,106,103,7,85,51,14,127,0,212,225,25,244,190,141,109,
        213,0,0,0,0,73,69,78,68,174,66,96,130
    };

    const unsigned char wxPython_2x_png[251] {
        137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,32,0,0,0,32,8,3,0,0,0,68,164,138,198,0,0,0,18,80,76,84,69,1,
        0,0,0,0,0,0,187,0,255,255,0,255,255,255,221,0,0,105,35,144,251,0,0,0,1,116,82,78,83,0,64,230,216,102,0,0,0,151,
        73,68,65,84,120,218,125,211,75,10,196,48,0,195,208,74,77,238,127,229,33,67,107,8,196,205,86,15,211,239,245,30,224,
        250,58,140,49,248,238,75,212,25,24,48,70,155,1,87,90,253,40,80,229,15,160,2,129,44,156,186,153,145,14,4,180,138,
        156,14,170,120,8,13,92,19,0,234,194,204,18,70,0,91,143,121,64,238,38,32,36,11,175,152,155,224,206,85,144,137,173,
        223,17,40,5,212,9,86,239,19,96,192,105,2,253,4,216,65,186,164,11,7,0,1,34,24,144,231,199,219,69,61,129,116,210,
        3,116,123,227,0,253,171,74,58,10,40,191,87,173,33,28,234,15,194,249,3,213,96,196,248,192,0,0,0,0,73,69,78,68,174,
        66,96,130
    };

    const unsigned char wxPython_png[399] {
        137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,16,0,0,0,16,8,6,0,0,0,31,243,255,97,0,0,0,9,112,72,89,115,0,
        0,11,19,0,0,11,19,1,0,154,156,24,0,0,1,65,73,68,65,84,56,203,141,147,49,82,195,64,12,69,159,3,7,160,164,204,13,
        114,131,32,31,194,37,190,66,78,192,160,12,109,238,192,16,119,57,2,20,114,74,102,72,17,122,51,49,7,32,109,58,81,
        120,29,219,177,19,248,51,154,221,213,206,254,149,190,36,232,66,84,213,147,36,49,254,137,209,201,99,3,88,173,86,
        34,34,174,170,14,200,223,52,83,140,5,46,51,113,119,119,85,117,51,115,51,171,73,46,66,88,224,188,5,75,43,51,51,119,
        119,151,153,92,140,226,186,231,185,175,150,120,19,195,115,56,239,49,150,68,67,4,87,192,142,3,194,13,99,110,131,
        119,11,76,130,17,214,140,8,200,135,8,40,74,202,232,149,242,61,99,77,198,154,3,240,205,248,72,0,80,2,37,47,128,6,
        207,238,120,87,52,206,83,232,81,159,148,74,139,20,103,65,163,75,1,82,156,17,41,73,48,251,105,9,60,165,234,143,180,
        181,191,0,53,195,221,113,249,8,4,205,207,218,137,162,87,214,80,74,247,202,180,104,69,81,167,91,165,164,163,129,
        158,176,186,148,53,242,125,231,120,119,174,149,97,202,35,147,80,198,37,243,60,175,30,119,8,210,16,225,253,16,193,
        184,155,211,252,11,226,77,203,145,1,187,208,11,79,228,128,70,189,153,120,24,16,102,11,124,2,75,226,161,102,234,
        215,62,109,102,34,136,118,118,22,126,1,223,141,159,243,242,170,60,166,0,0,0,0,73,69,78,68,174,66,96,130
    };

    const unsigned char wxToolBar_png[554] {
        137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,22,0,0,0,22,8,6,0,0,0,196,180,108,59,0,0,0,9,112,72,89,115,
        0,0,11,19,0,0,11,19,1,0,154,156,24,0,0,1,220,73,68,65,84,56,203,237,148,49,104,19,81,24,199,127,175,105,114,114,
        54,5,131,222,34,233,34,26,132,6,4,135,12,182,16,194,27,196,65,167,182,131,147,14,21,75,160,29,156,157,37,148,116,
        144,14,5,151,10,33,160,139,96,19,44,152,161,231,32,7,182,165,54,233,150,156,58,88,10,210,34,151,114,141,71,121,
        14,105,26,143,107,221,50,20,250,223,222,123,223,251,127,255,255,247,125,239,193,57,142,32,114,185,156,234,9,113,
        181,90,237,9,113,95,175,74,209,15,32,101,138,104,212,96,105,233,3,0,74,41,132,16,0,120,158,231,187,48,50,50,76,
        40,20,33,147,121,16,32,179,44,11,33,4,165,82,137,254,233,233,199,108,111,207,224,56,55,73,167,239,2,135,192,30,
        112,9,219,254,193,250,250,55,154,205,230,241,229,161,33,208,180,139,188,190,243,61,64,124,235,171,198,254,190,211,
        81,220,0,46,16,141,126,98,117,117,6,104,1,117,224,26,227,227,115,167,24,85,132,198,22,56,124,251,196,183,59,56,
        248,11,77,219,107,19,11,113,5,240,128,235,52,26,63,169,84,62,3,183,129,247,216,246,85,138,197,34,186,174,163,148,
        66,74,217,233,57,0,161,177,5,127,190,66,166,91,99,165,90,128,224,224,160,73,62,111,83,171,153,128,9,192,192,0,44,
        47,127,1,96,99,3,164,172,162,20,140,78,153,60,127,89,8,248,24,157,50,249,56,151,236,148,162,5,244,49,59,187,131,
        227,188,33,157,14,26,175,215,33,149,122,218,214,218,22,203,159,196,195,255,79,133,16,151,89,92,244,216,218,42,144,
        72,4,3,118,119,33,28,190,207,228,228,51,92,215,69,29,77,125,254,81,242,56,38,30,143,147,205,102,217,49,238,117,
        137,45,171,129,174,191,34,153,252,125,98,230,205,205,27,204,207,191,192,117,93,159,226,127,97,24,134,143,180,211,
        5,165,105,16,137,156,108,201,52,215,8,135,253,135,19,19,195,212,106,221,117,44,22,67,74,73,165,242,142,149,149,
        181,179,250,164,203,229,242,249,31,127,70,241,23,223,2,154,75,171,133,77,36,0,0,0,0,73,69,78,68,174,66,96,130
    };

    const unsigned char wxWizard_png[1047] {
        137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,22,0,0,0,22,8,6,0,0,0,196,180,108,59,0,0,0,9,112,72,89,115,
        0,0,11,19,0,0,11,19,1,0,154,156,24,0,0,3,201,73,68,65,84,56,203,213,149,77,104,92,85,20,199,127,239,35,51,239,37,
        169,121,147,168,157,39,86,140,186,153,224,38,1,21,186,12,130,18,45,162,221,212,70,138,8,130,80,139,213,166,136,
        109,55,82,65,4,55,74,7,68,90,63,105,23,162,213,133,212,6,101,236,198,148,22,59,145,104,141,160,109,218,164,164,
        77,173,153,230,99,50,147,153,119,207,113,241,222,76,29,180,117,229,194,11,135,199,123,247,190,223,57,247,156,123,
        254,23,254,111,195,58,241,203,239,122,244,212,21,186,186,3,86,106,138,0,168,130,2,42,168,106,139,1,168,36,223,73,
        214,136,34,170,180,217,138,45,117,30,190,47,196,61,250,195,60,126,167,15,40,126,91,211,31,0,155,178,39,153,26,43,
        114,226,174,173,36,200,107,33,233,63,133,9,82,175,243,249,119,51,184,106,187,148,87,133,114,109,21,43,1,54,70,112,
        112,15,217,129,144,133,242,179,55,216,115,235,171,68,134,186,177,112,141,40,65,187,77,167,231,52,39,183,140,62,
        68,117,96,43,222,122,143,204,197,34,47,100,190,164,196,97,190,185,245,195,127,201,172,82,171,9,51,75,224,122,14,
        12,220,217,193,189,235,124,140,196,211,87,71,251,201,242,26,213,245,125,120,100,224,179,231,201,100,246,177,161,
        191,235,134,88,215,177,88,92,169,243,197,210,50,174,5,180,167,44,122,58,29,230,126,252,138,224,224,30,170,57,168,
        14,246,225,5,111,2,5,200,121,84,167,242,4,175,231,25,239,125,2,175,119,128,142,187,115,45,80,47,237,177,166,167,
        27,210,22,174,3,46,170,136,10,43,149,26,149,201,60,1,16,48,69,149,176,245,199,201,248,153,203,132,84,67,152,45,
        87,254,6,6,168,27,193,136,224,42,74,35,187,157,15,30,100,226,158,243,220,241,201,219,100,57,76,245,145,145,120,
        226,200,69,14,76,6,28,9,250,248,244,241,103,72,3,25,11,210,158,223,2,47,47,45,196,5,52,130,173,34,68,18,39,87,36,
        57,171,7,14,113,188,186,3,175,240,51,99,91,139,28,206,79,146,43,85,233,239,203,177,109,231,78,124,223,39,157,78,
        95,55,215,34,130,45,170,68,73,213,20,139,116,218,163,62,49,205,253,207,189,74,97,95,72,95,239,16,195,244,178,113,
        114,138,227,133,35,244,134,33,35,35,35,68,81,116,93,168,138,96,163,10,18,71,235,182,185,100,179,107,241,125,159,
        114,185,28,175,28,222,200,194,220,56,0,197,98,145,226,88,129,76,38,195,246,23,95,98,97,97,177,197,34,177,154,93,
        105,171,10,34,2,8,41,215,161,221,247,72,181,57,160,17,125,147,227,148,188,28,142,5,23,166,207,1,80,24,139,225,97,
        24,178,123,247,46,92,91,91,204,24,19,131,27,80,219,118,168,172,70,204,254,81,99,230,74,141,11,87,234,148,190,191,
        196,154,174,91,40,93,93,164,30,25,166,206,158,105,194,11,133,2,65,16,240,206,187,251,57,51,23,177,88,181,227,84,
        36,167,204,54,198,64,44,61,76,95,174,113,232,219,18,251,143,206,179,127,116,158,247,191,46,113,250,124,5,85,105,
        230,176,1,47,22,139,113,166,134,135,249,233,228,40,167,207,149,155,221,103,34,131,173,162,72,82,188,180,11,183,
        117,59,172,187,57,182,219,123,108,58,60,11,249,11,24,224,212,196,111,12,14,14,18,134,33,217,108,150,161,161,33,
        46,255,90,72,148,15,212,24,92,21,193,24,165,188,82,161,231,38,155,13,15,116,54,165,203,182,237,70,179,210,230,94,
        211,146,181,1,124,244,193,123,188,252,202,14,242,249,60,0,79,111,121,42,6,39,114,106,55,36,208,177,33,229,66,202,
        85,82,174,69,202,181,112,44,5,49,212,86,43,44,45,151,169,213,163,216,162,216,246,238,125,131,241,241,113,54,111,
        222,68,45,138,48,81,132,149,4,229,46,46,173,112,246,82,26,177,172,164,65,4,213,216,153,168,52,85,81,164,138,72,
        67,149,147,5,10,143,62,185,157,99,197,89,80,197,177,45,86,86,13,87,151,77,124,131,188,245,241,49,218,59,124,196,
        72,114,192,21,21,65,52,121,26,131,52,28,66,236,92,4,36,222,122,92,3,141,47,30,81,118,109,123,236,191,187,243,254,
        4,61,95,30,87,232,10,12,187,0,0,0,0,73,69,78,68,174,66,96,130
    };

}

// ************* End of generated code ***********
// DO NOT EDIT THIS COMMENT BLOCK!
//
// Code below this comment block will be preserved
// if the code for this class is re-generated.
//
// clang-format on
// ***********************************************

/////////////////// Non-generated Copyright/License Info ////////////////////
// Purpose:   Main Window
// Author:    Ralph Walden
// Copyright: Copyright (c) 2020-2023 KeyWorks Software (Ralph Walden)
// License:   Apache License -- see ../../LICENSE
/////////////////////////////////////////////////////////////////////////////

void MainFrame::OnQuit(wxCommandEvent& WXUNUSED(event))
{
    // true forces the frame to close
    Close(true);
}

void MainFrame::OnGridSize(wxSizeEvent& WXUNUSED(event))
{
}
