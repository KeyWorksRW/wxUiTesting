///////////////////////////////////////////////////////////////////////////////
// Code generated by wxUiEditor - see https://github.com/KeyWorksRW/wxUiEditor/
//
// Do not edit any code above the "End of generated code" comment block.
// Any changes before that block will be lost if it is re-generated!
///////////////////////////////////////////////////////////////////////////////

// clang-format off

#include <wx/panel.h>
#include <wx/sizer.h>

#include "main_frame.h"

bool MainFrame::Create(wxWindow* parent, wxWindowID id, const wxString& title,
    const wxPoint& pos, const wxSize& size, long style, const wxString &name)
{

    if (!wxFrame::Create(parent, id, title, pos, size, style, name))
        return false;
    SetMinSize(ConvertDialogToPixels(wxSize(300, -1)));

    menubar = new wxMenuBar();

    menu_file = new wxMenu();
    auto* menu_item = new wxMenuItem(menu_file, wxID_EXIT);
    menu_file->Append(menu_item);
    menubar->Append(menu_file, "&File");

    auto* menu_dialogs = new wxMenu();
    auto* menu_item_test_dlg = new wxMenuItem(menu_dialogs, wxID_ANY, "Test Dialog...");
    menu_dialogs->Append(menu_item_test_dlg);
    auto* menu_item_test_wizard = new wxMenuItem(menu_dialogs, wxID_ANY, "Wizard...");
    menu_dialogs->Append(menu_item_test_wizard);
    menubar->Append(menu_dialogs, "Tests");

    SetMenuBar(menubar);

    auto* box_sizer = new wxBoxSizer(wxVERTICAL);

    auto* panel = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
    box_sizer->Add(panel, wxSizerFlags(1).Expand());

    auto* panel_sizer = new wxBoxSizer(wxVERTICAL);

    text_ctrl = new wxTextCtrl(panel, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE);
    text_ctrl->SetMinSize(ConvertDialogToPixels(wxSize(200, 100)));
    panel_sizer->Add(text_ctrl, wxSizerFlags(1).Expand().Border(wxALL));
    panel->SetSizerAndFit(panel_sizer);
    SetSizerAndFit(box_sizer);

    Centre(wxBOTH);

    // Event handlers
    Bind(wxEVT_MENU, &MainFrame::OnQuit, this, wxID_EXIT);
    Bind(wxEVT_MENU, &MainFrame::OnTestDialog, this, menu_item_test_dlg->GetId());
    Bind(wxEVT_MENU, &MainFrame::OnWizard, this, menu_item_test_wizard->GetId());

    return true;
}

// ************* End of generated code ***********
// DO NOT EDIT THIS COMMENT BLOCK!
//
// Code below this comment block will be preserved
// if the code for this class is re-generated.
//
// clang-format on
// ***********************************************

void MainFrame::OnQuit(wxCommandEvent& event)
{
    Close(true);
    event.Skip();
}

#include "test_dlg.h"
#include "wizard.h"

void MainFrame::OnTestDialog(wxCommandEvent& WXUNUSED(event))
{
    TestDialog dlg(this);
    dlg.ShowModal();
}

void MainFrame::OnWizard(wxCommandEvent& /* event */)
{
    Wizard wizard(this);
    wizard.Run();
}
